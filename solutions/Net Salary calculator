
function calculateNetSalary(basicSalary, benefits) {
    // Constants for tax rates, NHIF deductions, and NSSF contributions
    const PAYE_RATES = [
        { min: 0, max: 24000, rate: 10.0 },
        { min: 24001, max: 32333, rate: 25.0 },
        { min: 32334, max: 500000, rate: 30.0 },
        { min: 500001, max: 800000, rate: 32.5 },
        { min: 800001, max: Infinity, rate: 35.0 }
    ];

    const NHIF_RATES = [
        { min: 0, max: 5999, deduction: 150 },
        { min: 6000, max: 7999, deduction: 300 },
        { min: 8000, max: 11999, deduction: 400 },
        { min: 12000, max: 14999, deduction: 500 },
        { min: 15000, max: 19999, deduction: 600 },
        { min: 20000, max: 24999, deduction: 750 },
        { min: 25000, max: 29999, deduction: 850 },
        { min: 30000, max: 34999, deduction: 900 },
        { min: 35000, max: 39999, deduction: 950 },
        { min: 40000, max: 44999, deduction: 1000 },
        { min: 45000, max: 49999, deduction: 1100 },
        { min: 50000, max: 59999, deduction: 1200 },
        { min: 60000, max: 69999, deduction: 1300 },
        { min: 70000, max: 79999, deduction: 1400 },
        { min: 80000, max: 89999, deduction: 1500 },
        { min: 90000, max: 99999, deduction: 1600 },
        { min: 100000, max: Infinity, deduction: 1700 }
    ];

    const NSSF_TIER_I_LIMIT = 7000; // Up to 7,000 Ksh
    const NSSF_TIER_I_RATE = 0.06; // 6%
    const NSSF_TIER_II_LIMIT = 36000; // 7,001 - 36,000 Ksh
    const NSSF_TIER_II_RATE = 0.06; // 6%

    // Calculate gross salary
    const grossSalary = basicSalary + benefits;

    // Calculate PAYE (Tax)
    let tax = 0;
    for (const rate of PAYE_RATES) {
        if (grossSalary > rate.max) {
            tax += (rate.max - rate.min + 1) * (rate.rate / 100);
        } else {
            tax += (grossSalary - rate.min + 1) * (rate.rate / 100);
            break;
        }
    }

    // Calculate NHIF Deductions
    let nhifDeduction = 0;
    for (const rate of NHIF_RATES) {
        if (grossSalary > rate.max) {
            nhifDeduction = rate.deduction;
        } else {
            nhifDeduction = rate.deduction;
            break;
        }
    }

    // Calculate NSSF Deductions
    let nssfDeduction = 0;
    if (grossSalary <= NSSF_TIER_I_LIMIT) {
        nssfDeduction = grossSalary * NSSF_TIER_I_RATE;
    } else {
        nssfDeduction = NSSF_TIER_I_LIMIT * NSSF_TIER_I_RATE;
        if (grossSalary > NSSF_TIER_I_LIMIT && grossSalary <= NSSF_TIER_II_LIMIT) {
            nssfDeduction += (grossSalary - NSSF_TIER_I_LIMIT) * NSSF_TIER_II_RATE;
        } else if (grossSalary > NSSF_TIER_II_LIMIT) {
            nssfDeduction += (NSSF_TIER_II_LIMIT - NSSF_TIER_I_LIMIT) * NSSF_TIER_II_RATE;
        }
    }

    // Calculate Net Salary
    const netSalary = grossSalary - tax - nhifDeduction - nssfDeduction;

    // Output the results
    console.log(`Gross Salary: ${grossSalary.toFixed(2)} Ksh`);
    console.log(`PAYE (Tax): ${tax.toFixed(2)} Ksh`);
    console.log(`NHIF Deductions: ${nhifDeduction.toFixed(2)} Ksh`);
    console.log(`NSSF Deductions: ${nssfDeduction.toFixed(2)} Ksh`);
    console.log(`Net Salary: ${netSalary.toFixed(2)} Ksh`);
}